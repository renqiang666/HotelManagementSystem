<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">


    <!--配置数据源
         initialPoolSize：初始化连接数量
         minPoolSize：最小连接数量
         maxPoolSize：最大连接数量
         acquireIncrement: 当连接池用完之后一次性获取的连接数量
         idleConnectionTestPeriod:根据一定的时间间隔检查连接池的连接数量 单位为秒
         maxIdleTime：最大空闲时间 单位为秒
         maxStatements:最大的maxStatements连接数量
         maxStatementsPerConnection:最大语句缓存
    -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driverClassName}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="initialPoolSize" value="${jdbc.initialPoolSize}"></property>
        <property name="minPoolSize" value="${jdbc.minPoolSize}"></property>
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property>
        <property name="acquireIncrement" value="${jdbc.acquireIncrement}"></property>
        <property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}"></property>
        <property name="maxIdleTime" value="${jdbc.maxIdleTime}"></property>
        <property name="maxStatements" value="${jdbc.maxStatements}"></property>
        <property name="maxStatementsPerConnection" value="${jdbc.maxStatementsPerConnection}"></property>
    </bean>
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--配置sqlSessionFactory 并将数据源注入-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!--指定要使用到到mybatis配置文件-->
        <property name="configLocation" value="classpath:config/config.xml"/>
        <!--用于配置mapper映射xml-->
        <property name="mapperLocations" value="classpath*:com/hotelsystem/mapper/*.xml"/>
        <!-- 配置分页插件 -->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <value>
                            helperDialect=mysql
                            reasonable=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>


    <!-- 创建数据映射器-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.hotelsystem.dao"/>
    </bean>
    <!-- 对数据源进行事务管理 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

       <!-- 房间类型Array-->
    <util:list id="roomType">
    <value>单人间</value>
    <value>双人间</value>
    <value>大床房</value>
    <value>总统套房</value>
    </util:list>
    
    <!-- 房间状态Array-->
    <util:list id="roomState">
    <value>可入住</value>
    <value>已入住</value>
    <value>待打扫</value>
    </util:list>

    <!-- 订单生成器-->
    <bean id="sid" class="org.n3r.idworker.Sid"></bean>
    <!-- 扫描包加载Service实现类 -->
    <context:component-scan base-package="com.hotelsystem.service"></context:component-scan>
	<context:component-scan base-package="com.hotelsystem.utils"></context:component-scan>
    <!-- 开启注解方式声明事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	

	
	
</beans>